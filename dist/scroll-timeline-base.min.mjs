const f=new WeakMap,c=new WeakMap;function d(s){return s===document.scrollingElement?document:s}function v(s,e){const t=c.get(s).sourceMeasurements;let n=t.scrollTop;return e==="x"&&(n=Math.abs(t.scrollLeft)),n}function M(s,e){const t=c.get(s).sourceMeasurements;return e==="y"?t.scrollHeight-t.clientHeight:t.scrollWidth-t.clientWidth}function h(s){return{scrollLeft:s.scrollLeft,scrollTop:s.scrollTop,scrollWidth:s.scrollWidth,scrollHeight:s.scrollHeight,clientWidth:s.clientWidth,clientHeight:s.clientHeight}}function m(s){const e=c.get(s);e.sourceMeasurements=h(s);for(const t of e.timelineRefs)t.deref();e.updateScheduled||(setTimeout(()=>{for(const t of e.timelineRefs)t.deref();e.updateScheduled=!1}),e.updateScheduled=!0)}function g(s,e){const t=f.get(s),n=t.source;if(n!==e){if(n){const o=c.get(n);if(o){o.timelineRefs.delete(s);const i=Array.from(o.timelineRefs).filter(l=>typeof l.deref()>"u");for(const l of i)o.timelineRefs.delete(l);o.timelineRefs.size===0&&(o?.disconnect?.(),c.delete(n))}}if(t.source=e,e){let o=c.get(e);if(!o){o={timelineRefs:new Set,sourceMeasurements:h(e)},c.set(e,o);const i=new ResizeObserver(r=>{for(let u=0,p=r.length;u<p;u++)m(t.source)});i.observe(e);for(const r of e.children)i.observe(r);const l=new MutationObserver(r=>{for(const u of r)u.target instanceof HTMLElement&&m(u.target)});l.observe(e,{attributes:!0,attributeFilter:["style","class"]});const a=()=>{o.sourceMeasurements.scrollLeft=e.scrollLeft,o.sourceMeasurements.scrollTop=e.scrollTop;for(const r of o.timelineRefs)r.deref()};d(e).addEventListener("scroll",a),o.disconnect=()=>{i.disconnect(),l.disconnect(),d(e).removeEventListener("scroll",a)}}o.timelineRefs.add(new WeakRef(s))}}}class R{constructor({source:e=document.documentElement,axis:t="y"}){f.set(this,{source:null,axis:t}),g(this,e)}cancel(){c.get(this.source).disconnect?.()}get source(){return f.get(this).source}set source(e){g(this,e)}get axis(){return f.get(this).axis}set axis(e){f.get(this).axis=e}get phase(){const e=this.source;if(!e)return"inactive";const t=getComputedStyle(e);return t.display==="none"||e!==document.scrollingElement&&(t.overflow==="visible"||t.overflow==="clip")?"inactive":"active"}get currentTime(){const e=this.source;if(!e||!e.isConnected||this.phase==="inactive")return null;const t=getComputedStyle(e);if(t.display==="inline"||t.display==="none")return null;const n=this.axis,o=v(e,n),i=M(e,n);return i>0?{value:100*o/i}:{value:100}}}export{R as ScrollTimeline};
